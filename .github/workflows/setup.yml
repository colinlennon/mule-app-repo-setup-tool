# This is a basic workflow to help you get started with Actions

name: mule-app-repo-setup-tool

on:
  workflow_dispatch:
    inputs:
      raml-asset-id:
        description: 'Asset ID of RAML Specification in Exchange'
        type: string
      raml-version:
        description: 'Version of RAML Specification in Exchange'
        type: string
      github-pat:
        description: 'GitHub Personal Access Token'
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Java JDK
        uses: actions/setup-java@v3.3.0
        with:
         distribution: 'temurin'
         java-version: '11'
       
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.2
      
      # Checks-out this repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Checks-out the template under $GITHUB_WORKSPACE/template, so your job can access it
      - uses: actions/checkout@v3
        with:
          repository: colinlennon/template-demo
          ref: main
          token: ${{ github.event.inputs.github-pat }}
          path: template
        
      # Runs a single command using the runners shell
      - name: Switch to template directory
        run: cd template

      - name: Replace project.artifactId
        run: |
          cd template
          ARTIFACT_ID=${{ github.event.inputs.raml-asset-id }}-impl
          echo "ARTIFACT_ID: $ARTIFACT_ID"          
          ARTIFACT_ID_LINE_NUM=$(grep -n "<!-- PLACEHOLDER: project.artifactId -->" pom.xml | cut -d : -f 1) # TODO put placeholders in the template
          let "ARTIFACT_ID_LINE_NUM=ARTIFACT_ID_LINE_NUM+1"
          sed -i "${ARTIFACT_ID_LINE_NUM}s|<artifactId>.*</artifactId>|<artifactId>${ARTIFACT_ID}</artifactId>|" pom.xml
          sed -i '/<!-- PLACEHOLDER: project.artifactId -->/d' pom.xml
          
      - name: Replace project.version
        run: |
          cd template
          VERSION_LINE_NUM=$(grep -n "<!-- PLACEHOLDER: project.version -->" pom.xml | cut -d : -f 1)
          let "VERSION_LINE_NUM=VERSION_LINE_NUM+1"
          sed -i "${VERSION_LINE_NUM}s|<version>.*</version>|<version>0.0.1</version>|" pom.xml
          sed -i '/<!-- PLACEHOLDER: project.version -->/d' pom.xml
          cat pom.xml    # remove
          
      - name: Remove rest-api-template-spec dependency from pom.xml
        run: |
          cd template
          mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.groupId -q -DforceStdout # remove
          API_GROUP_ID=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.groupId -q -DforceStdout)
          REST_API_TEMPLATE_DEPENDECY_START=$(grep -n "<!-- START: rest-api-template dependency -->" pom.xml | cut -d : -f 1) # TODO: put this in the template
          REST_API_TEMPLATE_DEPENDECY_END=$(($REST_API_TEMPLATE_DEPENDECY_START + 7))
          REST_API_TEMPLATE_DEPENDECY_END="${REST_API_TEMPLATE_DEPENDECY_END}d"
          RES=$(sed -i "$REST_API_TEMPLATE_DEPENDECY_START,$REST_API_TEMPLATE_DEPENDECY_END" pom.xml)
          
      - name: Add API spec dependency to pom.xml
        run: |
          cd template
          API_SPEC_DEPENDENCY=$"<dependency>\\n"
          API_SPEC_DEPENDENCY+=$"            <groupId>$API_GROUP_ID</groupId>\\n"
          API_SPEC_DEPENDENCY+=$"            <artifactId>$API_ARTIFACT_ID</artifactId>\\n"
          API_SPEC_DEPENDENCY+=$"            <version>$API_VERSION</version>\\n"
          API_SPEC_DEPENDENCY+=$"            <classifier>raml</classifier>\\n"
          API_SPEC_DEPENDENCY+=$"            <type>zip</type>\\n"
          API_SPEC_DEPENDENCY+=$"        </dependency>"
          sed -i "s,<\!-- PLACEHOLDER: api-spec dependency -->,$API_SPEC_DEPENDENCY," pom.xml # TODO add placeholder to pom.xml
          
